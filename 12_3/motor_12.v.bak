module motor_12(t_floor,drc,clk_1KHz,arrival,c_floor,lock);
input [1:0]t_floor,drc;
output reg [1:0]c_floor;
output reg lock;
reg [1:0]c_floor_delay;
input clk_1KHz,arrival;
reg [15:0]cnt_3;
reg clk_3Hz;

always @ (posedge clk_1KHz)
begin
if (arrival==1)
begin
if (c_floor==t_floor)cnt_3=0;
else
begin 
	if (cnt_3<3000)
		begin
		cnt_3=cnt_3+1'b1;
		clk_3Hz=0;
		end
	else
		begin
		cnt_3=0;
		clk_3Hz=1;
		end
end
end
else cnt_3=0;
end

always @ (posedge clk_3Hz)
	begin
	if (c_floor<t_floor)c_floor=c_floor+1'b1;
	else if (c_floor>t_floor)c_floor=c_floor-1'b1;
	else c_floor=c_floor;
	end

always @ (posedge clk_1KHz)
begin
	
	lock <= (c_floor[1]^c_floor_delay[1])|(c_floor[0]^c_floor_delay[0]);
	c_floor_delay <= c_floor;
end
	
endmodule
		